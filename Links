http://www.baeldung.com/swagger-2-documentation-for-spring-rest-api
http://www.adeveloperdiary.com/java/spring-boot/develop-microservices-using-netflix-oss-spring-boot/
https://thenewstack.io/from-monolith-to-microservices/
http://www.baeldung.com/jacoco
https://cloud.spring.io/spring-cloud-netflix/multi/multi__router_and_filter_zuul.html

https://stackoverflow.com/questions/42773730/department-name-and-number-of-students

https://docs.docker.com/datacenter/install/linux/#step-4-join-more-nodes-to-ucp
https://docs.docker.com/machine/examples/ocean/#step-2-generate-a-personal-access-token
https://docs.docker.com/machine/get-started-cloud/#the-docker-machine-create-command
https://medium.com/lucjuggery/discovering-docker-datacenter-cf0daccddc41
https://logz.io/blog/docker-datacenter/
https://medium.com/lucjuggery/discovering-docker-datacenter-cf0daccddc41  --- imp

https://www.youtube.com/watch?v=htPYk6QxacQ ---- Angular

{Ansible}
https://www.digitalocean.com/community/tutorials/configuration-management-101-writing-ansible-playbooks

Max Sum in SubArray
Insertion,Bubble,Merge,Qucik
Fab,coins,power of 10,Egg drop
Permute
String Longest common sequence in two strings


https://meteatamel.wordpress.com/2012/03/21/deadlock-detection-in-java/

Table -- Student

Student_ID
Student_Name


Examination

Student_ID
Subject

select count(exam.subject),exam.subject from student stu,exam exam group by exam.subject; 


create table student(student_id int,student_name varchar(20));
create table exam(subject varchar(20),student_id int);

insert into student(1,'siri1');
insert into student(2,'siri2');
insert into student(3,'siri3');
insert into student(4,'siri4');
insert into student(5,'siri5');
insert into student(6,'siri6');
insert into student(7,'siri7');
insert into student(8,'siri8');

insert into exam('physics',1);
insert into exam('chemistry',1);
insert into exam('maths',1);
insert into exam('physics',2);
insert into exam('chemistry',2);
insert into exam('maths',2);
insert into exam('physics',2);
insert into exam('chemistry',2);
insert into exam('maths',2);
insert into exam('physics',2);
insert into exam('chemistry',2);
insert into exam('maths',2);
insert into exam('physics',2);
insert into exam('chemistry',2);
insert into exam('maths',2);
insert into exam('physics',3);
insert into exam('chemistry',3);
insert into exam('maths',3);
insert into exam('chemistry',2);
insert into exam('maths',2);
insert into exam('physics',3);
insert into exam('chemistry',3);


/***********************************************?
https://spring.io/guides/tutorials/spring-boot-oauth2/
http://www.baeldung.com/java-runnable-callable
https://docs.oracle.com/javase/8/docs/api/java/lang/Thread.UncaughtExceptionHandler.html
https://en.wikipedia.org/wiki/List_of_HTTP_status_codes
http://www.restapitutorial.com/lessons/httpmethods.html
https://www.w3schools.com/tags/ref_httpmethods.asp
http://www.mkyong.com/webservices/jax-rs/file-upload-example-in-jersey/
https://www.soapui.org/testing-dojo/best-practices/soap-vs-rest-challenges.html
https://www.javacodegeeks.com/2016/01/exception-handling-spring-restful-web-service.html
http://callistaenterprise.se/blogg/teknik/2015/04/10/building-microservices-with-spring-cloud-and-netflix-oss-part-1/
http://callistaenterprise.se/blogg/teknik/2015/04/27/building-microservices-part-3-secure-APIs-with-OAuth/
https://springframework.guru/running-spring-boot-in-a-docker-container/
https://thenewstack.io/from-monolith-to-microservices/
http://www.dofactory.com/sql/having
*****************************************************
http://oppansource.com/implementing-own-thread-pool-in-java/
https://caffinc.github.io/2016/03/simple-threadpool/
